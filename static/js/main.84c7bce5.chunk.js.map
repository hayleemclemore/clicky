{"version":3,"sources":["images/sunset-1.jpg","images/sunset-2.jpg","images/sunset-3.jpg","images/sunset-4.jpg","images/sunset-5.jpg","images/sunset-6.jpg","images/sunset-7.jpg","images/sunset-8.jpg","images/sunset-9.jpg","images/sunset-10.jpg","components/Navbar.js","components/Banner.js","components/ImageBlock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","className","href","id","message","score","highScore","Banner","ImageBlock","onClick","click","src","pic","alt","App","handleClick","console","log","oldBeenClicked","state","beenClicked","includes","newHighScore","setState","newBeenClicked","concat","newOrder","a","j","x","i","length","Math","floor","random","shuffle","cards","pic2","pic3","pic4","pic5","pic6","pic7","pic8","pic9","pic10","this","map","singlePic","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.84c7bce5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunset-1.b463fbf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-2.1ebafe0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-3.3ae152a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-4.dba95e5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-5.c9dfb7ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-6.a208f1fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-7.ecb15c45.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-8.8feb95cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-9.b28f7bad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset-10.9be30296.jpg\";","import React from \"react\";\n\nconst Navbar = (props) => (\n  <div className=\"bg-dark navbar-dark container-fluid text-center pt-1 pb-1\">\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n        <h2>\n          <a href=\".\" className=\"text-white nounderline\" id=\"app-name\">\n            Clicky Game\n          </a>\n        </h2>\n        </div>\n        <div className=\"col-md-4\">\n          <h3>{props.message}</h3>\n        </div>\n        <div className=\"col-md-4 text-muted\">\n          <h3>Score: {props.score} | Top Score: {props.highScore} </h3>\n        </div>\n    \n    </div>\n  </div>\n);\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Banner = () => (\n  <div className=\"jumbotron jumbotron-fluid text-center\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 offset-md-right-2\">\n          <h1>Clicky Game!</h1>\n          <h4>Click on an image to earn points, but don't click on any more than once!</h4>\n        </div>\n    </div>\n    </div>\n  </div>\n);\n\nexport default Banner;","import React from \"react\";\n\nconst ImageBlock = (props) => {\n  //console.log('these r aour props in image block', props)\n  return(\n  <img onClick={() => {props.click(props.id)}} src={props.pic} className={\"col-md-3 col-sm-4 col-xs-12 pb-4 imageBlock rounded-circle\"} alt={props.alt} />\n);\n  }\nexport default ImageBlock;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Banner from \"./components/Banner\";\nimport ImageBlock from \"./components/ImageBlock\";\nimport pic from './images/sunset-1.jpg'\nimport pic2 from './images/sunset-2.jpg'\nimport pic3 from './images/sunset-3.jpg'\nimport pic4 from './images/sunset-4.jpg'\nimport pic5 from './images/sunset-5.jpg'\nimport pic6 from './images/sunset-6.jpg'\nimport pic7 from './images/sunset-7.jpg'\nimport pic8 from './images/sunset-8.jpg'\nimport pic9 from './images/sunset-9.jpg'\nimport pic10 from './images/sunset-10.jpg'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      cards: [\n        {pic: pic, id: 1},\n        {pic: pic2, id: 2},\n        {pic: pic3, id: 3},\n        {pic: pic4, id: 4},\n        {pic: pic5, id: 5},\n        {pic: pic6, id: 6},\n        {pic: pic7, id: 7},\n        {pic: pic8, id: 8},\n        {pic: pic9, id: 9},\n        {pic: pic10, id: 10},\n      ],\n      beenClicked: [],\n      score: 0,\n      message: \"\",\n      highScore: 0\n    }\n  }\n\n  handleClick = (id) => {\n    console.log(\"you got clicked\")\n    function shuffle(a) {\n      let j, x, i;\n      for (i = a.length - 1; i > 0; i--) {\n          j = Math.floor(Math.random() * (i + 1));\n          x = a[i];\n          a[i] = a[j];\n          a[j] = x;\n      }\n      return a;\n  }\n  //console.log('WE GOT THE ID~!! in the on click', id)\n  let oldBeenClicked = this.state.beenClicked\n  if(oldBeenClicked.includes(id)) {\n    let newHighScore = this.state.highScore\n    if(this.state.score > newHighScore) {\n      newHighScore = this.state.score\n    }\n    this.setState({score: 0, beenClicked:[], message:\"Sorry, you lost!\", highScore: newHighScore});\n  }\n  else{\n    \n    let score = this.state.score + 1\n    let newBeenClicked = oldBeenClicked.concat(id)\n    let newOrder = shuffle(this.state.cards)\n    this.setState({cards: newOrder, beenClicked: newBeenClicked, score: score, message:\"\"})\n  }\n\n\n  }\n\n  render() {\n    const styles = {\n      picStyle: {\n        height: '50px',\n        padding:'40px'\n      }\n    }\n    console.log('THIS IS OUR STATE!!', this.state)\n    return (\n      <div>\n        <Navbar score={this.state.score} message={this.state.message} highScore={this.state.highScore}/>\n        <Banner />\n        {this.state.cards.map((singlePic)=> {\n          return(<ImageBlock id={singlePic.id} click={this.handleClick} pic={singlePic.pic} />)\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}